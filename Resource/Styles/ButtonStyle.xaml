<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Resource.Styles">

    <!--最小化按钮-->
    <ImageSource x:Key="MinKey">pack://application:,,,/Resource;component/Images/min.png</ImageSource>
    <!--最大化按钮-->
    <ImageSource x:Key="MaxKey">pack://application:,,,/Resource;component/Images/max.png</ImageSource>
    <!--还原按钮-->
    <ImageSource x:Key="RestoreKey">pack://application:,,,/Resource;component/Images/restore.png</ImageSource>
    <!--关闭按钮-->
    <ImageSource x:Key="CloseKey">pack://application:,,,/Resource;component/Images/close.png</ImageSource>
    <!--开始按钮-->
    <ImageSource x:Key="StartKey">pack://application:,,,/Resource;component/Images/start.png</ImageSource>
    <!--暂停按钮-->
    <ImageSource x:Key="PauseKey">pack://application:,,,/Resource;component/Images/pause.png</ImageSource>
    <!--停止按钮-->
    <ImageSource x:Key="StopKey">pack://application:,,,/Resource;component/Images/stop.png</ImageSource>

    <SolidColorBrush x:Key="ButtonPressedMouseOver" Color="#002D40"/>
    <SolidColorBrush x:Key="ButtonPressedBrush" Color="LightCoral"/>

    <!--最小化-->
    <Style x:Key="MinButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="bg" Fill="Transparent" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                        <Image Source="{DynamicResource MinKey}" Width="20" Height="20"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" Value="{DynamicResource ButtonPressedMouseOver}"  TargetName="bg"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" Value="{DynamicResource ButtonPressedBrush}"  TargetName="bg"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="MaxControlTemplate">
        <Grid>
            <Rectangle x:Name="bg" Fill="Transparent" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
            <Image x:Name="img" Source="{DynamicResource MaxKey}" Width="20" Height="20"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" Value="{DynamicResource ButtonPressedMouseOver}"  TargetName="bg"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Fill" Value="{DynamicResource ButtonPressedBrush}"  TargetName="bg"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="RestoreControlTemplate">
        <Grid>
            <Rectangle x:Name="bg" Fill="Transparent" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
            <Image x:Name="img" Source="{DynamicResource RestoreKey}" Width="20" Height="20"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" Value="{DynamicResource ButtonPressedMouseOver}"  TargetName="bg"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Fill" Value="{DynamicResource ButtonPressedBrush}"  TargetName="bg"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--还原/最大化按钮-->
    <Style x:Key="MaxOrRestoreButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Width" Value="35"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Template" Value="{DynamicResource MaxControlTemplate}"/>
        <Setter Property="ToolTip" Value="{DynamicResource MaxToolTip}"/>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Template" Value="{DynamicResource RestoreControlTemplate}"/>
                <Setter Property="ToolTip" Value="{DynamicResource NomalTooltip}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--关闭按钮样式-->
    <Style x:Key="CloseButton" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="35"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="bg" Fill="Transparent" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                        <Image x:Name="img" Source="{DynamicResource CloseKey}" Width="20" Height="20"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" Value="{DynamicResource ButtonPressedMouseOver}"  TargetName="bg"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" Value="{DynamicResource ButtonPressedBrush}"  TargetName="bg"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type Button}" x:Key="NomalButton">
        <Setter Property="Height" Value="25" />
        <Setter Property="Width" Value="60" />
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Background" Value="#4788CB" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" >
                    <Border x:Name="Border1" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid Margin="0">
                            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderThickness="0" Margin="0" Padding="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#6CA0D5"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#396DA2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="#396DA2"/>
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--开始按钮-->
    <Style x:Key="StartButton" TargetType="{x:Type Button}">
        <Setter Property="Opacity" Value="0.8"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Image x:Name="img" Source="{DynamicResource StartKey}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--暂停按钮-->
    <Style x:Key="PauseButton" TargetType="{x:Type Button}">
        <Setter Property="Opacity" Value="0.8"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Image x:Name="img" Source="{DynamicResource PauseKey}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--停止按钮-->
    <Style x:Key="StopButton" TargetType="{x:Type Button}">
        <Setter Property="Opacity" Value="0.8"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Image x:Name="img" Source="{DynamicResource StopKey}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>